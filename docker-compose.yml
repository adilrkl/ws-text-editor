services:
  backend:
    build: .
    container_name: java_backend
    ports:
      - "9090:9090"
    environment:
      - Y_WEBSOCKET_URL=ws://ywebsocket:1234
      # .env dosyasından okunacak
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - ywebsocket
      - postgres
    restart: unless-stopped
    env_file:
      - .env

  ywebsocket:
    build:
      context: ./y-websocket
    container_name: y_websocket
    environment:
      - HOST=0.0.0.0
      - PORT=1234
    ports:
      - "1234:1234"
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      # .env dosyasından okunacak
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    env_file:
      - .env 
