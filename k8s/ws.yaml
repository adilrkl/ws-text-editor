apiVersion: v1
kind: Namespace
metadata:
  name: ws
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: y-websocket
  namespace: ws
spec:
  replicas: 1
  selector:
    matchLabels:
      app: y-websocket
  template:
    metadata:
      labels:
        app: y-websocket
    spec:
      containers:
        - name: y-websocket
          image: europe-west1-docker.pkg.dev/docker-text-editor/ws-repo/y-websocket:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 1234
          readinessProbe:
            tcpSocket:
              port: 1234
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 1234
            initialDelaySeconds: 10
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: y-websocket-svc
  namespace: ws
spec:
  type: LoadBalancer
  selector:
    app: y-websocket
  ports:
    - name: ws
      port: 80
      targetPort: 1234
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ws-backend
  namespace: ws
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ws-backend
  template:
    metadata:
      labels:
        app: ws-backend
    spec:
      # Workload Identity için KSA'yı Pod'a bağlıyoruz
      serviceAccountName: ws-sql-sa
      containers:
        - name: ws-backend
          # Gerekirse backend imajınızın en son sürümünü kullanın
          image: europe-west1-docker.pkg.dev/docker-text-editor/ws-repo/ws-backend:v202508132324
          imagePullPolicy: IfNotPresent
          env:
            - name: Y_WEBSOCKET_URL
              value: "ws://y-websocket-svc:80"
            - name: Y_WEBSOCKET_BROWSER_URL
              # Bu IP'nin y-websocket LoadBalancer IP'si olduğundan emin olun
              value: "ws://35.240.94.137"
            # Proxy'ye bağlanmak için URL 127.0.0.1 olmalı
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://127.0.0.1:3306/wstexteditor?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC"
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: "com.mysql.cj.jdbc.Driver"
            - name: SPRING_JPA_DATABASE_PLATFORM
              value: "org.hibernate.dialect.MySQLDialect"
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: "update"
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysql-credentials
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-credentials
                  key: password
          ports:
            - containerPort: 9090
          readinessProbe:
            httpGet:
              path: /login # /editor yerine /login daha mantıklı bir health check
              port: 9090
            initialDelaySeconds: 15 # DB bağlantısı için süreyi biraz artıralım
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /login
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 20
        # --- Cloud SQL Auth Proxy Sidecar ---
        - name: cloud-sql-proxy
          image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.1
          args:
            - "--structured-logs"
            # Sizin Cloud SQL Connection Name'iniz
            - "docker-text-editor:europe-west1:text-editor-mysql=tcp:3306"
          securityContext:
            runAsNonRoot: true
          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits:   { cpu: "200m", memory: "256Mi" }
---
apiVersion: v1
kind: Service
metadata:
  name: ws-backend-svc
  namespace: ws
spec:
  type: LoadBalancer
  selector:
    app: ws-backend
  ports:
    - name: http
      port: 80
      targetPort: 9090
# --- Cluster içi MySQL Deployment, Service ve Secret artık GEREKLİ DEĞİL ve SİLİNDİ ---
# Secret (mysql-credentials) harici olarak `kubectl create secret` ile oluşturulduğu için burada olmasına gerek yok. 